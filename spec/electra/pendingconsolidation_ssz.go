// Code generated by dynamic-ssz. DO NOT EDIT.
// Hash: ffb0e1d6ec9d448094afbda516de2bf1ae03f104da365c6500ad71f3a9785f37
// Version: v1.1.1 (https://github.com/pk910/dynamic-ssz)
package electra

import (
	"github.com/attestantio/go-eth2-client/spec/phase0"
	dynssz "github.com/pk910/dynamic-ssz"
	"github.com/pk910/dynamic-ssz/hasher"
	"github.com/pk910/dynamic-ssz/sszutils"
)

var _ = sszutils.ErrListTooBig

func (t *PendingConsolidation) MarshalSSZ() ([]byte, error) {
	return dynssz.GetGlobalDynSsz().MarshalSSZ(t)
}
func (t *PendingConsolidation) MarshalSSZTo(buf []byte) (dst []byte, err error) {
	dst = buf
	if t == nil {
		t = new(PendingConsolidation)
	}
	{ // Field #0 'SourceIndex'
		dst = sszutils.MarshalUint64(dst, uint64(t.SourceIndex))
	}
	{ // Field #1 'TargetIndex'
		dst = sszutils.MarshalUint64(dst, uint64(t.TargetIndex))
	}
	return dst, nil
}

func (t *PendingConsolidation) UnmarshalSSZ(buf []byte) (err error) {
	buflen := len(buf)
	if buflen < 16 {
		return sszutils.ErrUnexpectedEOF
	}
	{ // Field #0 'SourceIndex' (static)
		buf := buf[0:8]
		t.SourceIndex = phase0.ValidatorIndex(sszutils.UnmarshallUint64(buf))
	}
	{ // Field #1 'TargetIndex' (static)
		buf := buf[8:16]
		t.TargetIndex = phase0.ValidatorIndex(sszutils.UnmarshallUint64(buf))
	}
	return nil
}

func (t *PendingConsolidation) SizeSSZ() (size int) {
	return 16
}

func (t *PendingConsolidation) HashTreeRoot() (root [32]byte, err error) {
	err = hasher.WithDefaultHasher(func(hh sszutils.HashWalker) (err error) {
		err = t.HashTreeRootWith(hh)
		if err == nil {
			root, err = hh.HashRoot()
		}
		return
	})
	return
}
func (t *PendingConsolidation) HashTreeRootWith(hh sszutils.HashWalker) error {
	if t == nil {
		t = new(PendingConsolidation)
	}
	idx := hh.Index()
	{ // Field #0 'SourceIndex'
		hh.PutUint64(uint64(t.SourceIndex))
	}
	{ // Field #1 'TargetIndex'
		hh.PutUint64(uint64(t.TargetIndex))
	}
	hh.Merkleize(idx)
	return nil
}

