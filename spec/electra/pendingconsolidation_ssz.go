// Code generated by fastssz. DO NOT EDIT.
// Hash: 17d4c9180818d70e873edf284079b326d586a16686d17c7c974a8a2fd19ec3e9
// Version: 0.1.3
package electra

import (
	"github.com/attestantio/go-eth2-client/spec/phase0"
	ssz "github.com/ferranbt/fastssz"
)

// MarshalSSZ ssz marshals the PendingConsolidation object
func (p *PendingConsolidation) MarshalSSZ() ([]byte, error) {
	return ssz.MarshalSSZ(p)
}

// MarshalSSZTo ssz marshals the PendingConsolidation object to a target array
func (p *PendingConsolidation) MarshalSSZTo(buf []byte) (dst []byte, err error) {
	dst = buf

	// Field (0) 'SourceIndex'
	dst = ssz.MarshalUint64(dst, uint64(p.SourceIndex))

	// Field (1) 'TargetIndex'
	dst = ssz.MarshalUint64(dst, uint64(p.TargetIndex))

	return
}

// UnmarshalSSZ ssz unmarshals the PendingConsolidation object
func (p *PendingConsolidation) UnmarshalSSZ(buf []byte) error {
	var err error
	size := uint64(len(buf))
	if size != 16 {
		return ssz.ErrSize
	}

	// Field (0) 'SourceIndex'
	p.SourceIndex = phase0.ValidatorIndex(ssz.UnmarshallUint64(buf[0:8]))

	// Field (1) 'TargetIndex'
	p.TargetIndex = phase0.ValidatorIndex(ssz.UnmarshallUint64(buf[8:16]))

	return err
}

// SizeSSZ returns the ssz encoded size in bytes for the PendingConsolidation object
func (p *PendingConsolidation) SizeSSZ() (size int) {
	size = 16
	return
}

// HashTreeRoot ssz hashes the PendingConsolidation object
func (p *PendingConsolidation) HashTreeRoot() ([32]byte, error) {
	return ssz.HashWithDefaultHasher(p)
}

// HashTreeRootWith ssz hashes the PendingConsolidation object with a hasher
func (p *PendingConsolidation) HashTreeRootWith(hh ssz.HashWalker) (err error) {
	indx := hh.Index()

	// Field (0) 'SourceIndex'
	hh.PutUint64(uint64(p.SourceIndex))

	// Field (1) 'TargetIndex'
	hh.PutUint64(uint64(p.TargetIndex))

	hh.Merkleize(indx)
	return
}

// GetTree ssz hashes the PendingConsolidation object
func (p *PendingConsolidation) GetTree() (*ssz.Node, error) {
	return ssz.ProofTree(p)
}
