// Copyright Â© 2023 Attestant Limited.
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package deneb_test

import (
	"encoding/json"
	"testing"

	"github.com/attestantio/go-eth2-client/spec/deneb"
	"github.com/stretchr/testify/assert"
	require "github.com/stretchr/testify/require"
)

func TestKZGCommitmentInclusionProofJSON(t *testing.T) {
	tests := []struct {
		name   string
		input  []byte
		output []byte
		err    string
	}{
		{
			name: "Empty",
			err:  "unexpected end of JSON input",
		},
		{
			name:  "JSONBad",
			input: []byte("{}"),
			err:   "invalid prefix",
		},
		{
			name:  "IncorrectNumberOfElements",
			input: []byte(`["0x0000000000000000000000000000000000000000000000000000000000000000","0x1111111111111111111111111111111111111111111111111111111111111111","0x2222222222222222222222222222222222222222222222222222222222222222","0x3333333333333333333333333333333333333333333333333333333333333333","0x4444444444444444444444444444444444444444444444444444444444444444","0x5555555555555555555555555555555555555555555555555555555555555555","0x6666666666666666666666666666666666666666666666666666666666666666","0x7777777777777777777777777777777777777777777777777777777777777777","0x8888888888888888888888888888888888888888888888888888888888888888","0x9999999999999999999999999999999999999999999999999999999999999999","0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb","0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc","0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"]`),
			err:   "incorrect number of elements",
		},
		{
			name:  "MissingElement",
			input: []byte(`["0x0000000000000000000000000000000000000000000000000000000000000000",,"0x2222222222222222222222222222222222222222222222222222222222222222","0x3333333333333333333333333333333333333333333333333333333333333333","0x4444444444444444444444444444444444444444444444444444444444444444","0x5555555555555555555555555555555555555555555555555555555555555555","0x6666666666666666666666666666666666666666666666666666666666666666","0x7777777777777777777777777777777777777777777777777777777777777777","0x8888888888888888888888888888888888888888888888888888888888888888","0x9999999999999999999999999999999999999999999999999999999999999999","0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb","0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc","0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","0x1010101010101010101010101010101010101010101010101010101010101010"]`),
			err:   "invalid character ',' looking for beginning of value",
		},
		{
			name:  "EmptyElement",
			input: []byte(`["0x0000000000000000000000000000000000000000000000000000000000000000","0x1111111111111111111111111111111111111111111111111111111111111111","0x2222222222222222222222222222222222222222222222222222222222222222","0x3333333333333333333333333333333333333333333333333333333333333333","0x4444444444444444444444444444444444444444444444444444444444444444","0x5555555555555555555555555555555555555555555555555555555555555555","0x6666666666666666666666666666666666666666666666666666666666666666","0x7777777777777777777777777777777777777777777777777777777777777777","0x8888888888888888888888888888888888888888888888888888888888888888","0x9999999999999999999999999999999999999999999999999999999999999999","0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb","0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc","0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",""]`),
			err:   "invalid element prefix",
		},
		{
			name:  "InvalidElement",
			input: []byte(`["0x0000000000000000000000000000000000000000000000000000000000000000","0x1111111111111111111111111111111111111111111111111111111111111111","0x2222222222222222222222222222222222222222222222222222222222222222","0x3333333333333333333333333333333333333333333333333333333333333333","0x4444444444444444444444444444444444444444444444444444444444444444","0x5555555555555555555555555555555555555555555555555555555555555555","0x6666666666666666666666666666666666666666666666666666666666666666","0x7777777777777777777777777777777777777777777777777777777777777777","0x8888888888888888888888888888888888888888888888888888888888888888","0x9999999999999999999999999999999999999999999999999999999999999999","0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb","0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc","0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","0xinvalid010101010101010101010101010101010101010101010101010101010"]`),
			err:   "invalid value invalid010101010101010101010101010101010101010101010101010101010: encoding/hex: invalid byte: U+0069 'i'",
		},
		{
			name:  "ShortElement",
			input: []byte(`["0x0000000000000000000000000000000000000000000000000000000000000000","0x1111111111111111111111111111111111111111111111111111111111111111","0x2222222222222222222222222222222222222222222222222222222222222222","0x3333333333333333333333333333333333333333333333333333333333333333","0x4444444444444444444444444444444444444444444444444444444444444444","0x5555555555555555555555555555555555555555555555555555555555555555","0x6666666666666666666666666666666666666666666666666666666666666666","0x7777777777777777777777777777777777777777777777777777777777777777","0x8888888888888888888888888888888888888888888888888888888888888888","0x9999999999999999999999999999999999999999999999999999999999999999","0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb","0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc","0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","0x10101010101010101010101010101010101010101010101010101010101010"]`),
			err:   "incorrect element length",
		},
		{
			name:  "Good",
			input: []byte(`["0x0000000000000000000000000000000000000000000000000000000000000000","0x1111111111111111111111111111111111111111111111111111111111111111","0x2222222222222222222222222222222222222222222222222222222222222222","0x3333333333333333333333333333333333333333333333333333333333333333","0x4444444444444444444444444444444444444444444444444444444444444444","0x5555555555555555555555555555555555555555555555555555555555555555","0x6666666666666666666666666666666666666666666666666666666666666666","0x7777777777777777777777777777777777777777777777777777777777777777","0x8888888888888888888888888888888888888888888888888888888888888888","0x9999999999999999999999999999999999999999999999999999999999999999","0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb","0xcccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc","0xdddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd","0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee","0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","0x1010101010101010101010101010101010101010101010101010101010101010"]`),
		},
	}

	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			var res deneb.KZGCommitmentInclusionProof
			err := json.Unmarshal(test.input, &res)
			if test.err != "" {
				require.EqualError(t, err, test.err)
			} else {
				require.NoError(t, err)
				rt, err := json.Marshal(&res)
				require.NoError(t, err)
				if len(test.output) > 0 {
					assert.Equal(t, string(test.output), string(rt))
				} else {
					assert.Equal(t, string(test.input), string(rt))
				}
			}
		})
	}
}
